---
- name: Create VPC, Subnets, Internet Gateway, Route Table, and Security Group
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Set AWS credentials
      set_fact:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
      delegate_to: localhost

    - name: Create VPC
      amazon.aws.ec2_vpc_net:
        name: MyVPC
        cidr_block: 10.0.0.0/16
        region: ap-southeast-3
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
      register: vpc

    - name: Create Subnets
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        cidr: "{{ item.cidr }}"
        az: "{{ item.az }}"
        region: ap-southeast-3
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
      loop:
        - { cidr: 10.0.1.0/24, az: ap-southeast-3a }
        - { cidr: 10.0.2.0/24, az: ap-southeast-3b }
        - { cidr: 10.0.3.0/24, az: ap-southeast-3c }

    - name: Create Internet Gateway
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{ vpc.vpc.id }}"
        region: ap-southeast-3
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
      register: igw

    - name: Create Route Table
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        region: ap-southeast-3
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
      register: route_table

    - name: Associate Subnets with Route Table
      amazon.aws.ec2_vpc_subnet_route_table:
        subnet_id: "{{ item.subnet.id }}"
        route_table_id: "{{ route_table.route_table.id }}"
        region: ap-southeast-3
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
      loop: "{{ vpc.subnets }}"
      loop_control:
        loop_var: item

    - name: Create Security Group
      amazon.aws.ec2_group:
        name: MySecurityGroup
        description: Allow SSH and HTTP traffic
        vpc_id: "{{ vpc.vpc.id }}"
        region: ap-southeast-3
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        rules:
          - proto: tcp
            ports:
              - 22
              - 80
            cidr_ip: 0.0.0.0/0
      register: security_group
